--ABRIENDO LA BASE DE DATOS DEL SISTEMA
USE MASTER
GO

--VALIDAR LA BASE DE DATOS
IF DB_ID('VENTAS2017') IS NOT NULL
	DROP DATABASE VENTAS2017
GO
--CREANDO LA BASE DE DATOS
CREATE DATABASE VENTAS2017
GO

--ABRIENDO LA BASE DE DATOS
USE VENTAS2017
GO

--CAMBIANDO EL FORMATO DE LA FECHA
SET DATEFORMAT DMY
GO

--CREANDO TABLAS Y VALIDANDO

--TABLA CATEGORIAS
IF OBJECT_ID ('CATEGORIAS') IS NOT NULL
BEGIN
	DROP TABLE CATEGORIAS
END 
CREATE TABLE CATEGORIAS
( 
COD_CATE		CHAR		(3) 	NOT NULL PRIMARY KEY,
NOMBRE			VARCHAR		(25) 	NOT NULL
)
GO

--TABLA DISTRITOS
IF OBJECT_ID('DISTRITOS') IS NOT NULL
	BEGIN
DROP TABLE DISTRITOS
END
CREATE TABLE DISTRITOS 
(
ID_DISTRITO			CHAR		(4) 	NOT NULL PRIMARY KEY,
NOMBRE_DISTRITO		VARCHAR 	(40) 	NOT NULL
)
GO

--TABLA CARGOS

IF OBJECT_ID('CARGOS') IS NOT NULL
BEGIN
	DROP TABLE CARGOS
END
CREATE TABLE CARGOS
(
COD_CARGO	  		CHAR 		(3) 	NOT NULL PRIMARY KEY,
NOMBRE_CARGO 		VARCHAR 	(30) 	NOT NULL
)
GO

--TABLA EMPLEADO

IF OBJECT_ID('EMPLEADO') IS NOT NULL
BEGIN
	DROP TABLE EMPLEADO
END
CREATE TABLE EMPLEADO
(
	COD_EMPLE		CHAR	 	(5) 	NOT NULL PRIMARY KEY,
	NOMBRES			VARCHAR 	(25) 	NOT NULL,
	APELLIDOS		VARCHAR 	(25) 	NOT NULL,
	DNI_EMPLE		CHAR	 	(8) 	NOT NULL,
	DIRECCION		VARCHAR 	(60) 	NOT NULL,
	ESTADO_CIVIL	CHAR    	(1) 	NOT NULL,
	NIVEL_EDUCA		VARCHAR 	(30) 	NOT NULL,
	TELEFONO		VARCHAR 	(12) 	NOT NULL,
	EMAIL			VARCHAR 	(35) 	NOT NULL,
	SUELDO_BASICO	MONEY	 	NOT 	NULL,
	FECHA_INGRESO	DATE		NOT 	NULL,
	ID_DISTRITO		CHAR    	(4) 	NOT NULL REFERENCES DISTRITOS,
	COD_CARGO		CHAR	 	(3) 	NOT NULL REFERENCES CARGOS
)
GO
 		
--TABLA CLIENTE

IF OBJECT_ID('CLIENTE') IS NOT NULL
BEGIN
	DROP TABLE CLIENTE
END

CREATE TABLE CLIENTE
(
	ID_CLIENTE			CHAR	 	(6) 	NOT NULL PRIMARY KEY,
	NOMBRES				VARCHAR 	(25) 	NOT NULL,
	APELLIDOS			VARCHAR 	(25) 	NOT NULL,
	DIRECCION			VARCHAR 	(60) 	NULL,
	FONO				CHAR    	(9) 	NULL,
	ID_DISTRITO			CHAR	 	(4) 	NOT NULL REFERENCES DISTRITOS,
	EMAIL				VARCHAR 	(35) 	NULL
)
GO

--TABLA PRODUCTO

IF OBJECT_ID('PRODUCTO') IS NOT NULL
BEGIN
	DROP TABLE PRODUCTO
END

CREATE TABLE PRODUCTO
(
	ID_PRODUCTO			CHAR	 	(6)  	NOT NULL PRIMARY KEY,
	DESCRIPCION			VARCHAR 	(45) 	NOT NULL,
	PRECIO_VENTA		MONEY        		NOT NULL,
	STOCK_MINIMO		INT					NULL,
	STOCK_ACTUAL		INT					NULL,
	FECHA_VENC			DATE				NULL,
	COD_CATE			CHAR		(3)		NOT NULL REFERENCES CATEGORIAS
)

GO

--TABLA BOLETA

IF OBJECT_ID('BOLETA') IS NOT NULL
BEGIN
	DROP TABLE BOLETA
END
CREATE TABLE BOLETA
(
	NUM_BOLETA			CHAR	 	(8) 	NOT NULL PRIMARY KEY,
	FECHA_EMI			DATE	     		NOT NULL,
	ID_CLIENTE			CHAR	 	(6) 	NOT NULL REFERENCES CLIENTE,
	COD_EMPLE			CHAR	 	(5) 	NOT NULL REFERENCES EMPLEADO,
	ESTADO_BOLETA		VARCHAR 	(25) 	NOT NULL
)
GO

--TABLA DETALLE_BOLETA

IF OBJECT_ID ('DETALLEBOLETA') IS NOT NULL
BEGIN
	DROP TABLE DETALLEBOLETA
END

CREATE TABLE DETALLEBOLETA
(
	NUM_BOLETA		CHAR 		(8) 	NOT NULL REFERENCES BOLETA,
	ID_PRODUCTO		CHAR 		(6) 	NOT NULL REFERENCES PRODUCTO,
	CANTIDAD		INT	  				NOT NULL,
	IMPORTE			MONEY	  			NOT NULL,
	PRIMARY KEY (NUM_BOLETA, ID_PRODUCTO)
)
GO

--@@@@@@@@@@@@@@@@@@@@@IMPLEMENTACIÓN DE RESTRICCIONES@@@@@@@@@@@@@@@@@@@@
					--@@DEFAULT, CHECK, UNIQUE@@

--@@@@@ DEFAULT @@@@@

--ASIGNAR EL VALOR CERO AL STOCK MÍNIMO Y STOCK ACTUAL DE LA TABLA PRODUCTO 
ALTER TABLE PRODUCTO ADD CONSTRAINT DF_STOCKACT DEFAULT 0 FOR STOCK_ACTUAL 
GO 
 
ALTER TABLE PRODUCTO ADD CONSTRAINT DF_STOCKMIN DEFAULT 0 FOR STOCK_MINIMO 
GO 
 
--ASIGNAR EL VALOR “AC” AL ESTADO DE LA BOLETA DE LA TABLA BOLETA. 
ALTER TABLE BOLETA ADD CONSTRAINT DF_ESTADO DEFAULT 'AC' FOR ESTADO_BOLETA 
GO 
 
--ASIGNAR EL VALOR “NO REGISTRA” AL CORREO ELECTRÓNICO (EMAIL) DE LA TABLA CLIENTE
ALTER TABLE CLIENTE ADD CONSTRAINT DF_EMAIL DEFAULT 'NO REGISTRA' FOR EMAIL 
GO 
 
--ASIGNAR EL VALOR “0000000” AL TELÉFONO DE LA TABLA CLIENTE 
ALTER TABLE CLIENTE ADD CONSTRAINT DF_TELEFONO DEFAULT '000000000' FOR FONO 
GO 
 
--@@@@@ CHECK @@@@@

--EL PRECIO DE VENTA DEL PRODUCTO DEBE SER MAYOR A CERO 
ALTER TABLE PRODUCTO ADD CONSTRAINT CHK_PRECIOVENTA CHECK (PRECIO_VENTA>0) 
GO

--EL ESTADO DE LA BOLETA SOLO DEBE PERMITIR LOS VALORES AC(ACTIVO) Y AN(ANULADO)
ALTER TABLE BOLETA ADD CONSTRAINT CHK_ESTADO CHECK (ESTADO_BOLETA IN('AC','AN')) 
GO 
 
--LA FECHA DE EMISIÓN DE LA BOLETA DEBE MAYOR O IGUAL A LA FECHA ACTUAL.
ALTER TABLE BOLETA ADD CONSTRAINT CHK_FECHA_EMI CHECK (FECHA_EMI>=GETDATE())
GO

--EL CAMPO ESTADO CIVIL DE LA TABLA EMPLEADO SOLO DEBE PERMITIR LOS VALORES C (CASADO), S (SOLTERO), T (CONVIVIENTE), D (DIVORCIADO), V (VIUDO)
ALTER TABLE EMPLEADO ADD CONSTRAINT CK_ESTADOCIVIL CHECK (ESTADO_CIVIL IN('S','C','V','D','T'))
GO

--EL CAMPO NIVEL DE EDUCACIÓN DE LOS EMPLEADOS DEBE PERMITIR LOS VALORES (PRIMARIA, SECUNDARIA, SUPERIOR, UNIVERSITARIO).
ALTER TABLE EMPLEADO ADD CONSTRAINT CK_NIVELEDUCA CHECK (NIVEL_EDUCA IN('PRIMARIA','SECUNDARIA','SUPERIOR','UNIVERSITARIO'))
GO

--EL SUELDO BÁSICO DE LOS EMPLEADOS DEBE SER COMO MÍNIMO 850.00
ALTER TABLE EMPLEADO ADD CONSTRAINT CKSUELDO CHECK(SUELDO_BASICO>=850.00)
GO

--EL CAMPO CÓDIGO DE LA TABLA EMPLEADO DEBE EMPEZAR CON LA LETRA E
ALTER TABLE EMPLEADO ADD CONSTRAINT CHK_CODEMPLE CHECK (COD_EMPLE   LIKE 'E[0-9][0-9][0-9][0-9]')
GO

--EL CAMPO CÓDIGO DE LA TABLA EMPLEADO DEBE EMPEZAR CON LA LETRA E

ALTER TABLE CATEGORIAS ADD CONSTRAINT CHK_CODCATE CHECK (COD_CATE LIKE 'C[0-9][0-9]')
GO

--@@@@@ UNIQUE @@@@@

--LOS NOMBRES DE LOS DISTRITOS DEBEN SER VALORES ÚNICOS 
ALTER TABLE DISTRITOS ADD CONSTRAINT UQ_NOMBRE_DIST UNIQUE (NOMBRE_DISTRITO) 
GO 
 
--LA DESCRIPCIÓN DEL PRODUCTO DEBEN SER VALORES ÚNICOS 
ALTER TABLE PRODUCTO ADD CONSTRAINT UQ_DESCRIPCION_PROD UNIQUE (DESCRIPCION) 
GO 
 
--EL DNI DE LA TABLA EMPLEADO DEBEN SER VALORES ÚNICOS 
ALTER TABLE EMPLEADO ADD CONSTRAINT UQ_DNIEMPLE UNIQUE (DNI_EMPLE) 
GO 

--EL DNI DE LA TABLA EMPLEADO DEBEN SER VALORES ÚNICOS 
ALTER TABLE EMPLEADO ADD CONSTRAINT UQ_DIRECCION UNIQUE (DIRECCION) 
GO

--ELIMINAR LA RESTRICCIÓN UQ_DESCRIPCION_PROD DE LA TABLA PRODUCTO 
--ALTER TABLE PRODUCTO 
--DROP UQ_DESCRIPCION_PROD

--VERIFICAR TODAS LAS RESTRICCIONES DE LA TABLA PRODUCTO 
SP_HELPCONSTRAINT PRODUCTO
GO

--LISTADO LAS COLUMNAS DE LA TABLA PRODUCTO
SP_COLUMNS PRODUCTO
GO

--LISTANDO LAS TABLAS CREADAS EN UNA BASE DE DATOS
SELECT * FROM INFORMATION_SCHEMA.TABLES
GO
 
--*******************************USO DE LAS SENTENCIAS DML: INSERT, UPDATE Y DELETE*******************
--@@@@@@@@@@@@@@@@@@@TRATAMIENTO DE DATOS DATOS@@@@@@@@@@@@@@@@@@@@@@@@@

--INSERTANDO REGISTROS A LA TABLA CATEGORÍA (INSERCIÓN INDIVIDUAL)
INSERT INTO CATEGORIAS (COD_CATE,NOMBRE) VALUES ('C01','ABARROTES')
INSERT INTO CATEGORIAS (COD_CATE,NOMBRE) VALUES ('C02','LACTEOS')
INSERT INTO CATEGORIAS (COD_CATE,NOMBRE) VALUES ('C03','FRUTAS')
INSERT INTO CATEGORIAS (COD_CATE,NOMBRE) VALUES ('C04','BEBIDAS')
GO
SELECT* FROM CATEGORIAS
--INSERTANDO REGISTROS A LA TABLA DISTRITOS (INSERCIÓN MÚLTIPLE)
INSERT INTO DISTRITOS (ID_DISTRITO, NOMBRE_DISTRITO) VALUES 
('D001','COMAS'),
('D002','LINCE'),
('D003','CERCADO'),
('D004','MIRAFLORES'),
('D005','LOS OLIVOS'),
('D006','S.J.L.')
GO

--INSERTANDO EN CARGOS
INSERT INTO CARGOS(COD_CARGO, NOMBRE_CARGO) VALUES 
('C01','GERENTE'),
('C02','ADMINISTRADOR(A)'),
('C03','VENDEDOR(A)'),
('C04','CONTADOR(A)'),
('C05','SECRETARIA')
GO

--INSERTANDO EN EMPLEADOS
INSERT INTO EMPLEADO VALUES
('E0001','BRENDA','QUISPE RAMOS','40138140','JR.PACHITEA #140','C',
'SUPERIOR','990387487','BRENDITA@GMAIL.COM',6000.00,'2014-03-02','D005','C02')

INSERT INTO EMPLEADO VALUES
('E0002','NOM1','APEPA1 APEMA1','12345678','DIRECCION1','S',
'SECUNDARIA','999999991','CORREO1@GMAIL.COM',1500.00,'2014-06-05','D005','C03')

INSERT INTO EMPLEADO VALUES
('E0003','NOM2','APEPA2 APEMA2','12345672','DIRECCION2','S',
'SECUNDARIA','999999992','CORREO2@GMAIL.COM',1500.00,'2014-08-05','D002','C03')

INSERT INTO EMPLEADO VALUES
('E0004','NOM3','APEPA3 APEMA3','12345673','DIRECCION3','C',
'UNIVERSITARIO','999999993','CORREO3@GMAIL.COM',2500.00,'2014-05-03','D003','C04')

INSERT INTO EMPLEADO VALUES
('E0005','NOM4','APEPA4 APEMA4','12345674','DIRECCION4','C',
'SUPERIOR','999999994','CORREO4@GMAIL.COM',4500.00,'2014-10-10','D005','C03')

--SELECT * FROM EMPLEADO

--INSERTANDO DATOS EN CLIENTE
INSERT INTO CLIENTE VALUES
('CLI001','NOMBRE1','APEPA1 APEMA1','DIRECCION1',999999991,'D006','CORREO1@DOMINIO.COM')

INSERT INTO CLIENTE (ID_CLIENTE,NOMBRES,APELLIDOS,DIRECCION,ID_DISTRITO)
VALUES ('CLI002','NOMBRE2','APEPA2 APEMA2','DIRECCION2','D006')

INSERT INTO CLIENTE (ID_CLIENTE,NOMBRES,APELLIDOS,DIRECCION,ID_DISTRITO)
VALUES ('CLI003','NOMBRE3','APEPA3 APEMA3','DIRECCION3','D005')

INSERT INTO CLIENTE (ID_CLIENTE,NOMBRES,APELLIDOS,DIRECCION,ID_DISTRITO)
VALUES ('CLI004','NOMBRE4','APEPA4 APEMA4','DIRECCION4','D006')

INSERT INTO CLIENTE (ID_CLIENTE,NOMBRES,APELLIDOS,DIRECCION,ID_DISTRITO)
VALUES ('CLI005','NOMBRE5','APEPA5 APEMA5','DIRECCION5','D005')
--SELECT * FROM CLIENTE

--INSERTAMOS DATOS A LA TABLA PRODUCTO
INSERT INTO PRODUCTO VALUES ('PRO001','ARROZ COSTEÑO',160.00,5,200,'2018-02-24','C01')
INSERT INTO PRODUCTO VALUES ('PRO002','AZUCAR RUBIA',100.00,2,80,'2018-05-05','C01')
INSERT INTO PRODUCTO VALUES ('PRO003','FIDEOS ANITA',30.00,3,150,'2018-10-08','C02')
INSERT INTO PRODUCTO VALUES ('PRO004','FIDEOS MOLITALIA',35.00,5,120,'2019-08-08','C01')
INSERT INTO PRODUCTO VALUES ('PRO005','YOGURT GLORIA',26.00,5,230,'2018-08-25','C03')

--INSERTAMOS DATOS A LA TABLA BOLETA
ALTER TABLE BOLETA DROP CONSTRAINT CHK_FECHA_EMI
GO

INSERT INTO BOLETA VALUES ('10000001','2016-05-11', 'CLI002','E0002','AC')
INSERT INTO BOLETA VALUES ('10000002','2018-05-03', 'CLI002','E0001','AC')
INSERT INTO BOLETA VALUES ('10000003','2016-05-02', 'CLI001','E0003','AN')
INSERT INTO BOLETA VALUES ('10000004','2019-04-03', 'CLI003','E0002','AC')
INSERT INTO BOLETA VALUES ('10000005','2020-05-01', 'CLI001','E0001','AN')

--@@@@@@@@@@@@@@@@@@@SENTENCIAS DML - INSERT, UPDATE, DELETE@@@@@@@@@@@@

--a. Actualizar el precio de venta del producto en un 50% más sobre el precio de venta actual de
--todos los productos.
SELECT * FROM PRODUCTO

UPDATE PRODUCTO SET PRECIO_VENTA = PRECIO_VENTA * 1.5
GO

--b. Actualizar su dirección de la cliente ANETH LUANA con “AV. TUPAC INCA YUPANQUI #
--1250”.
SELECT * FROM CLIENTE

UPDATE CLIENTE 
SET DIRECCION = 'AV. TUPAC INCA YUPANQUI # 1250' 
WHERE ID_CLIENTE = 'CLI001'

--c. Actualizar su teléfono y email del cliente 
--JOSE LUIS por 990990388, josesito555@gmail.com

UPDATE CLIENTE
SET FONO = '990990388', EMAIL = 'josesito555@gmail.com'
WHERE ID_CLIENTE = 'CLI002'

--d. Actualizar el teléfono de todos los clientes a “000000000”

--e. Actualizar el sueldo básico de todos los empleados 
--en un 20% más sobre el sueldo básico actual.
UPDATE EMPLEADO
SET SUELDO_BASICO = SUELDO_BASICO * 1.2

--f. Actualizar con la fecha actual todas las boletas 
--registradas en el año 2016.
SELECT * FROM BOLETA

UPDATE BOLETA
SET FECHA_EMI = GETDATE()
WHERE YEAR(FECHA_EMI) = 2016

--g. Actualizar el stock actual de la tabla producto con 150 solo de la categoría abarrotes (utilice
--su código)
